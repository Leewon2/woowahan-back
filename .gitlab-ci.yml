stages:
  - build
  - deploy

variables:
  FRONTEND_DIR: "/home/ubuntu/S09P22A609/frontend"
  BACKEND_DIR: "/home/ubuntu/S09P22A609/backend"
  EC2_USERNAME: "ubuntu"

before_script:
  # Docker Login
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

  # Setup SSH Key
  - echo "$SSH_PRIVATE_KEY" > deploy_key.pem
  - chmod 600 deploy_key.pem

  # Explicitly update the codebase on EC2
  - ssh -i deploy_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_IP 'cd /home/ubuntu/S09P22A609 && git pull origin master'

  # Set JAVA_HOME for backend
  - export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

  # Give execution permission for Gradle wrapper
  - chmod +x $BACKEND_DIR/gradlew

  # Change to frontend directory and install npm if it doesn't exist
  - cd $FRONTEND_DIR
  - which npm || curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash - && sudo apt-get install -y nodejs

  # Change permission for frontend directory to avoid EACCES error
  - sudo chown -R $(whoami) $FRONTEND_DIR
  - sudo chown -R $(whoami) $BACKEND_DIR

build-frontend:
  stage: build
  image: node:16
  script:
    - cd $FRONTEND_DIR
    - npm install
    - npm run build
    - docker build -t $DOCKERHUB_USERNAME/frontend:latest .
    - docker push $DOCKERHUB_USERNAME/frontend:latest
  only:
    refs:
      - master

build-backend:
  stage: build
  image: openjdk:11
  script:
    - cd $BACKEND_DIR
    - ./gradlew clean build -x test
    - docker build -t $DOCKERHUB_USERNAME/backend:latest .
    - docker push $DOCKERHUB_USERNAME/backend:latest
  only:
    refs:
      - master

deploy:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - sudo apt-get update -y
    - sudo apt-get install -y sshpass
  script:
    - scp -i deploy_key.pem -o StrictHostKeyChecking=no docker-compose.yml $EC2_USERNAME@$EC2_IP:/home/ubuntu/S09P22A609/
    - ssh -i deploy_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_IP 'docker-compose pull && docker-compose up -d'
  only:
    refs:
      - master