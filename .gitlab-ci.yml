stages:
  - build
  - deploy

variables:
  FRONTEND_DIR: "/home/ubuntu/S09P22A609/frontend"
  BACKEND_DIR: "/home/ubuntu/S09P22A609/backend"
  EC2_USERNAME: "ubuntu"

before_script:
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - echo "$SSH_PRIVATE_KEY" > deploy_key.pem
  - chmod 600 deploy_key.pem
  - chmod +x $BACKEND_DIR/gradlew

build-frontend:
  stage: build
  image: node:16
  script:
    - cd $FRONTEND_DIR
    - npm install
    - npm run build
    - docker build -t $DOCKERHUB_USERNAME/frontend:latest .
    - docker push $DOCKERHUB_USERNAME/frontend:latest
  only:
    refs:
      - master

build-backend:
  stage: build
  image: openjdk:11
  script:
    - cd $BACKEND_DIR
    - ./gradlew clean build -x test
    - docker build -t $DOCKERHUB_USERNAME/backend:latest .
    - docker push $DOCKERHUB_USERNAME/backend:latest
  only:
    refs:
      - master

deploy:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - apt-get update -y
    - apt-get install -y sshpass
  script:
    - scp -i deploy_key.pem -o StrictHostKeyChecking=no docker-compose.yml $EC2_USERNAME@$EC2_IP:/home/ubuntu/S09P22A609/
    - ssh -i deploy_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_IP 'docker-compose pull && docker-compose up -d'
  only:
    refs:
      - master